{"version":3,"sources":["components/SearchBar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","App.js","components/services/pixabay.js","index.js"],"names":["SearchBar","state","imageName","handleSubmit","e","preventDefault","trim","props","searchProp","setState","toast","error","handleChange","currentTarget","value","toLowerCase","className","onSubmit","this","type","placeholder","onChange","Component","GalleryItem","image","onImageClick","src","webformatURL","alt","tags","onClick","largeImageURL","propType","PropTypes","shape","string","func","App","data","query","page","loading","handleSearch","handleGalleryLargeItem","largeImage","showModal","toggleModal","prevState","scrollOnLoadButton","window","scrollTo","top","document","documentElement","scrollHeight","behavior","pervProps","api_key","fetch","then","response","json","hits","fetchImages","catch","finally","autoClose","map","el","id","Oval","ReactDOM","render","StrictMode","getElementById"],"mappings":"2TAIqBA,E,4MACnBC,MAAQ,CACNC,UAAW,I,EAGbC,aAAe,SAAAC,GACbA,EAAEC,iBAEkC,KAAhC,EAAKJ,MAAMC,UAAUI,QAIzB,EAAKC,MAAMC,WAAW,EAAKP,MAAMC,WACjC,EAAKO,SAAS,CAAEP,UAAW,MAJzBQ,IAAMC,MAAM,qB,EAOhBC,aAAe,SAAAR,GACb,EAAKK,SAAS,CAAEP,UAAWE,EAAES,cAAcC,MAAMC,iB,4CAGnD,WACE,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaC,SAAUC,KAAKf,aAA5C,UACE,wBAAQgB,KAAK,SAASH,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVG,KAAK,OAGLC,YAAY,gBACZN,MAAOI,KAAKjB,MAAMC,UAClBmB,SAAUH,KAAKN,wB,GAnCYU,a,oBCFxB,SAASC,EAAT,GAA+C,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,aAC3C,OACE,oBAAIT,UAAU,mBAAd,SACE,qBACEU,IAAKF,EAAMG,aACXC,IAAKJ,EAAMK,KACXb,UAAU,yBACVc,QAAS,kBAAML,EAAaD,EAAMO,oBAM1CR,EAAYS,SAAW,CACrBR,MAAOS,IAAUC,MAAM,CACrBP,aAAcM,IAAUE,OACxBJ,cAAeE,IAAUE,OACzBN,KAAMI,IAAUE,SAElBV,aAAcQ,IAAUG,M,ICZLC,E,4MACnBpC,MAAQ,CACNqC,KAAM,GACNC,MAAO,GACPC,KAAM,EACNC,SAAS,G,EAwBXC,aAAe,SAAAH,GACb,EAAK9B,SAAS,CACZ8B,QACAC,KAAM,EACNF,KAAM,M,EAIVK,uBAAyB,SAAAZ,GACvB,EAAKtB,SAAS,CACZmC,WAAYb,EACZc,WAAW,K,EAIfC,YAAc,WACZ,EAAKrC,UAAS,SAAAsC,GAAS,MAAK,CAC1BF,WAAYE,EAAUF,UACtBD,WAAY,Q,EAIhBI,mBAAqB,WACnBC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,Y,wDA9Cd,SAAmBC,EAAWT,GAAY,IAAD,OACnCA,EAAUR,QAAUrB,KAAKjB,MAAMsC,QACjCrB,KAAKT,SAAS,CAAEgC,SAAS,ICnBhB,WAA4C,IAAXD,EAAU,uDAAH,EAC/CiB,EAAU,qCAEhB,OAAOC,MAAM,8BAAD,OAH4C,uDAAd,GAG9B,iBAA6ClB,EAA7C,gBAAyDiB,EAAzD,6DAETE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAArB,GAAI,OAAIA,EAAKwB,QDejBC,CAAY7C,KAAKjB,MAAMsC,MAAOrB,KAAKjB,MAAMuC,MACtCmB,MAAK,SAAArB,GACJ,EAAK7B,SACH,CAAE6B,SAMoB,IAApB,EAAKrC,MAAMuC,MACb,EAAKQ,wBAGRgB,OAAM,SAAArD,GAAK,OAAI,EAAKF,SAAS,CAAEE,aAC/BsD,SAAQ,kBAAM,EAAKxD,SAAS,CAAEgC,SAAS,U,oBAgC9C,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAWjC,WAAYU,KAAKwB,eAC5B,cAAC,IAAD,CAAgBwB,UAAW,MAE3B,mCACE,oBAAIlD,UAAU,eAAd,SACGE,KAAKjB,MAAMqC,KAAK6B,KAAI,SAAAC,GACnB,OACE,cAAC7C,EAAD,CAEEC,MAAO4C,EACP3C,aAAc,EAAKkB,wBAFdyB,EAAGC,WAalB,cAAC,IAAaC,KAAd,W,GAlFyBhD,aEJjCiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,W","file":"static/js/main.e160bcd2.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class SearchBar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.error('Input image name');\n      return;\n    }\n    this.props.searchProp(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  handleChange = e => {\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            // autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images\"\n            value={this.state.imageName}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default function GalleryItem({ image, onImageClick }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => onImageClick(image.largeImageURL)}\n      />\n    </li>\n  );\n}\n\nGalleryItem.propType = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    largeImageURL: PropTypes.string,\n    tags: PropTypes.string,\n  }),\n  onImageClick: PropTypes.func,\n};\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport LoadingIcons from 'react-loading-icons';\nimport './App.css';\nimport SearchBar from './components/SearchBar/Searchbar';\nimport fetchImages from './components/services/pixabay';\nimport GalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\n// import ImageGallery from './components/ImageGallery/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    data: [],\n    query: '',\n    page: 1,\n    loading: false,\n  };\n\n  componentDidUpdate(pervProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.setState({ loading: true });\n\n      fetchImages(this.state.query, this.state.page)\n        .then(data => {\n          this.setState(\n            { data },\n            // state => ({\n            // data: [...state.data, ...data],\n            // page: state.page + 1,\n            // })\n          );\n          if (this.state.page !== 1) {\n            this.scrollOnLoadButton();\n          }\n        })\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ loading: false }));\n    }\n  }\n  handleSearch = query => {\n    this.setState({\n      query,\n      page: 1,\n      data: [],\n    });\n  };\n\n  handleGalleryLargeItem = largeImageURL => {\n    this.setState({\n      largeImage: largeImageURL,\n      showModal: true,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n      largeImage: '',\n    }));\n  };\n\n  scrollOnLoadButton = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar searchProp={this.handleSearch} />\n        <ToastContainer autoClose={3000} />\n\n        <>\n          <ul className=\"ImageGallery\">\n            {this.state.data.map(el => {\n              return (\n                <GalleryItem\n                  key={el.id}\n                  image={el}\n                  onImageClick={this.handleGalleryLargeItem}\n                />\n              );\n            })}\n          </ul>\n        </>\n\n        {/* <ImageGallery\n          data={this.state.data}\n          onImageClick={this.handleGalleryLargeItem}\n        /> */}\n        <LoadingIcons.Oval />\n      </>\n    );\n  }\n}\n","export default function fetchImages(query = '', page = 1) {\n  const api_key = '23006956-b96a6e3eefb63390e039a3023';\n\n  return fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=${api_key}&image_type=photo&orientation=horizontal&per_page=12\n  `)\n    .then(response => response.json())\n    .then(data => data.hits);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}